// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Comando pãra Cria uma migration : yarn prisma migrate dev
model User{
  id String @id @default(uuid())
  name String
  email String
  password String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}

//@id é a primary key
model Category{
  id String @id @default( uuid())
  name String

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

   @@map("categories")
   //Relação de (1-N) um para muitos
   products Product[]
}


model Product{
  id String @id @default( uuid())
  name String
  price String
  description String
  banner String

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  category Category @relation(fields: [category_id], references: [id])

  @@map("products")
  category_id String
  items Item[]
}

model Order{
  id String @id @default(uuid())
  table Int
  //Iniciará falso, pois o pedido não foi concluido
  status Boolean @default(false)
  // Ele iniciará como rascunho, pode ser cancelado antes de ser enviado.
  draft Boolean @default(true)
  name String? 

//Criado ou adptado no dia do pedido (now())
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("orders")
  items Item[]
}

model Item {
  id String @id @default(uuid())
  amount Int

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  order Order @relation(fields: [order_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])
  @@map("items")
  order_id String
  product_id String
}